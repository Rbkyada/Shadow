{"version":3,"sources":["assets/sound.mp3","components/ShadeColor.js","components/Shades.js","components/ShadeSearch.js","components/Shadow.js","App.js","index.js"],"names":["module","exports","ShadeColor","props","shade","onColorCopy","useState","copy","setCopy","useEffect","interval","setInterval","clearInterval","text","hexString","onCopy","className","style","backgroundColor","Shades","soundRef","useRef","shades","setshades","color","isColor","createShades","Values","current","play","ref","src","require","map","ShadeSearch","onInputChange","width","type","placeholder","aria-label","value","onChange","e","target","id","name","to","role","Shadow","Hori","setHori","Veri","setVeri","Blur","setBlur","Color","setColor","check","setcheck","back","setback","lineHeight","class","min","max","checked","boxShadow","background","App","randomColor","render","exact","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.753b2edf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound.5d1a7c95.mp3\";","import React,{useState, useEffect} from 'react'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nexport default function ShadeColor(props) {\r\n    \r\n        const {shade, onColorCopy} = props\r\n\r\n        const [ copy, setCopy ] = useState(false)\r\n\r\n        useEffect(() => {\r\n            let interval;\r\n            interval = setInterval(() => {\r\n                setCopy(false);           \r\n              }, 1500);\r\n              return () => {\r\n                  clearInterval(interval)\r\n              }\r\n        }, [copy])\r\n\r\n        const onCopy = () => {\r\n            setCopy(true);\r\n            onColorCopy();\r\n        }\r\n\r\n    return (\r\n        <>\r\n         <CopyToClipboard text={shade.hexString()} onCopy={() => onCopy()} >\r\n            <div className=\"text-light d-flex justify-content-center align-items-center \" style={{backgroundColor: shade.hexString()}}>\r\n                {\r\n                    copy ? (\r\n                        <span className=\"copied shadeColor\">copied!</span>\r\n                    ) :  (\r\n                        <span className=\"shadeColor\">{shade.hexString()}</span>\r\n                    )\r\n                }\r\n            </div>\r\n          </CopyToClipboard>\r\n        </>\r\n    )\r\n}\r\n","import React,{useEffect, useState, useRef} from 'react'\r\nimport Values from 'values.js'\r\nimport isColor from 'is-color'\r\nimport ShadeColor from './ShadeColor'\r\n\r\nexport default function Shades(props) {\r\n  \r\n\r\n  const soundRef = useRef();\r\n\r\n  const [ shades, setshades ] = useState([])\r\n\r\n  const {color} = props\r\n\r\n  useEffect(() => {\r\n    if(isColor(color)){\r\n      createShades()\r\n    }\r\n  }, [color])\r\n\r\n  const createShades = () => {\r\n    const shades = new Values(color).shades(1)\r\n   // const shades = shadesColor.shades(1)\r\n    setshades(shades)\r\n  }\r\n\r\n  const onColorCopy = () => {\r\n    soundRef.current.play();\r\n  };\r\n\r\n  return (\r\n        <>\r\n          <div className=\"Shades\">\r\n            <audio ref={soundRef} src={require(\"../assets/sound.mp3\")} />\r\n            {\r\n              shades.map((shade) => <ShadeColor shade={shade} onColorCopy={onColorCopy} /> )\r\n            }\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ShadeSearch(props) {\r\n\r\n  const { color, onInputChange } = props\r\n\r\n  // useEffect(() => {\r\n  //   value=\"\"\r\n  // }, [])\r\n\r\n    return (\r\n        <>\r\n           <div className=\"ShadeSearch justify-contect-center align-items-center d-flex justify-content-center\">\r\n             <input className=\"form-control shadow border-0\" style={{width:\"200px\"}} \r\n                    type=\"search\" \r\n                    placeholder=\"Search [ K A A L ]\" \r\n                    aria-label=\"Search\" \r\n                    value={color} \r\n                    onChange={(e) => onInputChange(e.target.value)} \r\n              />\r\n             \r\n                <input className=\"picker shadow\" type=\"color\" id=\"favcolor\" name=\"favcolor\" value=\"#ff0000\" onChange={(e) => onInputChange(e.target.value)} />\r\n            <Link className=\"btn btn-outline-warning ml-4\" to=\"/shadow\" role=\"button\">Shadow</Link>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{ useState,useEffect, useRef} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nexport default function Shadow() {\r\n\r\n    \r\n    const soundRef = useRef();\r\n\r\n    const [ Hori, setHori ] = useState(10)\r\n    const [ Veri, setVeri ] = useState(10)\r\n    const [ Blur, setBlur ] = useState(10)\r\n    const [ Color, setColor ] = useState(\"#dd4040\")\r\n    const [ check, setcheck ] = useState(false)\r\n    const [ back, setback ] = useState(\"darkcyan\")\r\n\r\n    const [ copy, setCopy ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        interval = setInterval(() => {\r\n            setCopy(false);           \r\n          }, 1500);\r\n          return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [copy])\r\n\r\n    const onCopy = () => {\r\n        setCopy(true);\r\n        onColorCopy()\r\n    }\r\n\r\n    \r\n  const onColorCopy = () => {\r\n    soundRef.current.play();\r\n  };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ShadowBox pt-4\">\r\n             <audio ref={soundRef} src={require(\"../assets/sound.mp3\")} />\r\n                <div className=\"container\">\r\n                <Link className=\"btn btn-outline-danger\" to=\"/\">Go Back</Link> \r\n                \r\n                  <div className=\"row mt-5\">\r\n                    <div className=\"col-lg-6 col-sm-12\">\r\n                        <div className=\"row w-75 shadow border py-4 p-2 mt-4\" style={{lineHeight:2}}>\r\n                            <label>Horizontal lenght</label>\r\n                            <input type=\"range\" class=\"custom-range\" id=\"customRange1\"  min=\"-200\" max=\"200\" value={Hori} onChange={ (e) => setHori(e.target.value)} />\r\n                            <label>Vertical lenght</label>\r\n                            <input type=\"range\" min=\"-200\" max=\"200\" value={Veri} onChange={ (e) => setVeri(e.target.value)} />\r\n                            <label>Blur</label>\r\n                            <input type=\"range\" min=\"-200\" max=\"200\" value={Blur} onChange={ (e) => setBlur(e.target.value)} />\r\n                            <label>Shadow Color</label>\r\n                            <input type=\"color\" className=\"colorInput\" value={Color} onChange={ (e) => setColor(e.target.value)}/> \r\n                            <div className=\"switch my-2\">\r\n                                <label>Outline &nbsp;\r\n                                <input type=\"checkbox\" checked={check} onChange={ (e) => setcheck(!check) } />\r\n                                <span className=\"lever\"></span>\r\n                                  &nbsp; inset\r\n                                </label>\r\n                            </div>\r\n                            <label>Box Color</label>\r\n                            <input type=\"color\" className=\"colorInput\" value={back} onChange={ (e) => setback(e.target.value)}/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                \r\n                <div className=\"col-lg-6 col-md-12 mt-5\"> \r\n                <CopyToClipboard text={`box-shadow: ${Hori}px ${Veri}px ${Blur}px ${Color};`} onCopy={() => onCopy()}>\r\n                    <div className=\"output\">\r\n                        <div className=\"box\" \r\n                            style={{boxShadow:`${Hori}px ${Veri}px ${Blur}px ${Color} ${check ? \"inset\":\"\" }`,\r\n                            background:`${back}`\r\n                        }} >\r\n                            {\r\n                                copy ? (\r\n                                    <span className=\"copied shadeColor\">copied!</span>\r\n                                ) : (\r\n                                    <p>box-shadow: {Hori}px {Veri}px {Blur}px {Color}</p>\r\n                                )\r\n                            }\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </CopyToClipboard>\r\n                </div>\r\n\r\n                </div>\r\n\r\n            </div> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{ useState, useEffect } from 'react';\nimport Shades from './components/Shades';\nimport ShadeSearch from './components/ShadeSearch';\nimport randomColor from 'randomcolor'\nimport { Route, Switch } from 'react-router-dom';\nimport Shadow from './components/Shadow';\n\nfunction App() {\n\n  const [ color, setColor] = useState(\"red\")\n\n  useEffect(() =>{ \n    setColor(randomColor());\n  },[])\n\n  const onInputChange = (value) => {\n    setColor(value)\n  }\n\n  return (\n  <>\n    <div className=\"App\">\n    <Switch> \n      <Route render={() => \n          <>\n            <ShadeSearch color={color} onInputChange={onInputChange} />\n            <Shades color={color} />\n          </>\n        } />\n      <Route exact path=\"/shadow\" component={Shadow} />\n    </Switch>\n    </div>\n  </>\n  );\n}\n\nexport default App;\n\n\n\n{/* <Shades color={color} /> */}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.js'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}